{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAmBO,OACrCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EACIE,EAAEQ,OAAOF,QAoBLG,YAAc,+B,uCC3BjBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECJwB,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCsB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GACtBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDX0BK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAGvB,OACO,qCACA,oBAAIJ,UAAU,mCAAd,SAAkDhB,IAEjDoB,GAAW,wCAEZ,qBAAKJ,UAAU,gDAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYpBgB,EA5BI,WAEhB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAED,OACE,qCACE,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAGQ4C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAWA,GAAgBA,Y,MCfxD6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.03786deb.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(\r\n            e.target.value\r\n        )\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n        setCategories(cats=>[ inputValue, ...cats])\r\n        setInputValue('')\r\n    }\r\n}\r\n\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder = 'Busca tu serie favorita'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport const GifGridItem = ({title, url}) => {   \r\n    return (\r\n        <div className=\"card animate__animated animate__backInUp\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n\r\n return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n        \r\n        <div className=\"card-grid animate__animated animate__backInUp\">\r\n            \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />  \r\n                    ))\r\n                }\r\n         </div>\r\n        </>\r\n    )\r\n}\r\n  ","import { useState, useEffect } from \"react\";\r\nimport { setTimeout } from \"timers\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; //{data:[], loading: true}\r\n};\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n     const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory  setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n\r\n            { \r\n                categories.map(category=>\r\n                    <GifGrid category ={category} key ={category}/>\r\n                )\r\n            }\r\n\r\n        </ol>\r\n    \r\n\r\n      </>\r\n    );\r\n  \r\n  \r\n  }\r\n\r\n\r\n  export default GifExpertApp;\r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}